name: build

env:
  OUTFILE: lib/libmy.a

on:
  push:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run coding style checker
        run: check.sh $(pwd) $(pwd)
      - name: Report Coding style errors
        run: |
          if [[ -s coding-style-reports.log ]]; then
            while read -r error; do
              IFS=':' read -r file line err message <<< "$error"
              echo "::error title='$err coding style error' file=$file,line=$line::$message"
            done < coding-style-reports.log
            exit 1
          fi
  check_program_compilation:
    runs-on: ubuntu-latest
    needs: check_coding_style
    container: epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Launch make
        run: make
        timeout-minutes: 2
      - name: Clean up
        run: make clean
      - name: Verify executables
        run: |
          IFS=','
          for file in $OUTFILE; do
            if [ ! -e "$file" ]; then
              echo "::error title='$file did not compile correctly.'"
              exit 1
            fi
          done
  run_tests:
    runs-on: ubuntu-latest
    needs: check_program_compilation
    container: epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Launch make tests_run
        run: make tests_run
        timeout-minutes: 2
